#BlueJ class context
comment0.params=eq\ dx
comment0.target=Derivative(Equation,\ java.lang.String)
comment1.params=
comment1.target=java.lang.String\ getEquation()
comment10.params=hi\ lo\ dx
comment10.target=java.lang.String\ quotientRule(java.lang.String,\ java.lang.String,\ char)
comment11.params=functions\ dx
comment11.target=java.lang.String\ productRule(java.util.ArrayList,\ char)
comment12.params=fx\ gx\ dx
comment12.target=java.lang.String\ deriveFunction(java.lang.String,\ java.lang.String,\ char)
comment12.text=\r\n\ Derives\ equation\ parts\ in\ the\ form\ fx[gx]\ ->\ fx'[gx]*gx'\ given\ that\ fx\ is\ a\ function\ of\ gx\r\n\ @param\ fx\ the\ function\ in\ the\ form\:\ "cos"\ or\ "lg3"\r\n\ @param\ gx\ the\ inner\ function\r\n
comment2.params=
comment2.target=char\ getTerm()
comment3.params=eq
comment3.target=void\ setEquation(java.lang.String)
comment4.params=dx
comment4.target=void\ setTerm(char)
comment5.params=
comment5.target=java.lang.String\ getDerivative()
comment6.params=function\ dx
comment6.target=java.lang.String\ getDerivative(java.lang.String,\ char)
comment6.text=\r\n\ Gets\ derivative\ of\ any\ function\ by\ splitting\ it\ up\ and\ relaying\ parts\ to\ different\ methods\r\n\ @param\ function\ The\ original\ function\ to\ be\ passed\ in\r\n\ @return\ the\ derivative\ of\ function\r\n
comment7.params=str\ chr
comment7.target=int\ getAppearances(java.lang.String,\ char)
comment8.params=arr\ s
comment8.target=java.lang.String\ join(java.util.ArrayList,\ java.lang.String)
comment8.text=\r\n\ Small\ utility\ method\ to\ join\ ArrayLists\ together\ with\ a\ delimiter\r\n
comment9.params=fx\ dx
comment9.target=java.lang.String\ powerRule(java.lang.String,\ char)
comment9.text=\r\n\ Derives\ the\ equation\ parts\ using\ the\ power\ rules.\r\n\ @param\ fx\ the\ polynomial\ equation\r\n\ @param\ dx\ the\ variable\ to\ derive\ in\ terms\ of\r\n
numComments=13
