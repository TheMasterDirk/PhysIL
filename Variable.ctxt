#BlueJ class context
comment0.params=n\ variableSymbol\ vaar\ isConstant\ isEnvironmental
comment0.target=Variable(java.lang.Object,\ java.lang.Object,\ java.lang.Object,\ boolean,\ boolean)
comment1.params=v
comment1.target=void\ addOldVariable(Variable)
comment1.text=\r\n\ This\ adds\ the\ variables\ of\ the\ same\ type\ which\ are\ deleted\ and\ added\ to\ this\ original\r\n\ \r\n\ @param\ v\ The\ added\ component\ that\ was\ deleted\r\n
comment10.params=s
comment10.target=void\ setSolved(boolean)
comment11.params=c
comment11.target=void\ setConstant(boolean)
comment12.params=c
comment12.target=void\ setEnvironmental(boolean)
comment13.params=a
comment13.target=void\ setAngle(java.lang.Double)
comment14.params=
comment14.target=java.lang.Double\ getOriginalAngle()
comment15.params=
comment15.target=java.lang.Double\ getAngle()
comment16.params=
comment16.target=java.lang.Object\ getVariableName()
comment17.params=
comment17.target=java.lang.Object\ getOriginalValue()
comment18.params=
comment18.target=java.lang.Object\ getValue()
comment19.params=
comment19.target=java.lang.String\ getUnits()
comment2.params=v
comment2.target=void\ setAllOldVariables(java.util.ArrayList)
comment20.params=o\ a
comment20.target=void\ setVandA(java.lang.Object,\ java.lang.Double)
comment21.params=o
comment21.target=void\ setValue(java.lang.Object)
comment22.params=
comment22.target=void\ resetValue()
comment23.params=n
comment23.target=void\ setName(java.lang.String)
comment24.params=n
comment24.target=void\ setVariableName(java.lang.String)
comment25.params=u
comment25.target=void\ setUnits(java.lang.String)
comment26.params=v
comment26.target=boolean\ canBeDouble(java.lang.String)
comment27.params=
comment27.target=boolean\ isKnown()
comment28.params=valueToChange\ angleToChange\ newValue\ newAngle
comment28.target=boolean\ dynamicallyChange(java.lang.Object,\ java.lang.Double,\ java.lang.Object,\ java.lang.Double)
comment28.text=\r\n\ Allows\ for\ dynamic\ changing\ of\ variable\ by\ replacing\ one\ of\ its\ old\ components\ with\ a\ newer\ version,\r\n\ and\ then\ calculates\ the\ new\ value\ of\ it.\ Does\ so\ solely\ based\ off\ of\ a\ value\ and\ an\ angle\r\n\ \r\n\ @param\ varToReplac\ -\ the\ variable\ that's\ being\ replaced\r\n\ @param\ angleToChange\ -\ the\ angle\ of\ the\ old\ variable\ that\ will\ be\ replaced\r\n\ @param\ newValue\ -\ the\ new\ value\ of\ the\ varaible\r\n\ @param\ newAnlge\ -\ the\ new\ value\ of\ the\ angle\r\n
comment29.params=a\ b
comment29.target=boolean\ anglesMatch(java.lang.Double,\ java.lang.Double)
comment29.text=\r\n\ This\ methods\ will\ check\ two\ angles\ and\ see\ if\ they\ are\ the\ same,\ up\ to\ two\ decimal\ places\ if\ they\ aren't\ exact\ (e.g.\ -90\ and\ 270)\r\n\ \r\n\ @param\ a\ -\ One\ of\ the\ angles\r\n\ @param\ b\ -\ The\ other\ angle\r\n
comment3.params=
comment3.target=java.util.ArrayList\ getAllComponents()
comment30.params=a\ b
comment30.target=boolean\ valuesMatch(java.lang.Object,\ java.lang.Object)
comment4.params=
comment4.target=java.lang.Object\ getName()
comment5.params=
comment5.target=boolean\ isEnvironmental()
comment6.params=
comment6.target=boolean\ isConstant()
comment7.params=
comment7.target=boolean\ isSolved()
comment8.params=v
comment8.target=boolean\ equals(Variable)
comment9.params=
comment9.target=Variable\ copy()
numComments=31
